// Generated by view binder compiler. Do not edit!
package com.voiceinput.assistant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.voiceinput.assistant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageView animationView;

  @NonNull
  public final Button btnClear;

  @NonNull
  public final Button btnCopy;

  @NonNull
  public final FloatingActionButton btnMicrophone;

  @NonNull
  public final ImageButton btnSettings;

  @NonNull
  public final MaterialCardView layoutTranscription;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final SwitchMaterial switchFloatingButton;

  @NonNull
  public final TextView tvCurrentConfig;

  @NonNull
  public final TextView tvStatus;

  @NonNull
  public final TextView tvTranscribedText;

  private ActivityMainBinding(@NonNull ScrollView rootView, @NonNull ImageView animationView,
      @NonNull Button btnClear, @NonNull Button btnCopy,
      @NonNull FloatingActionButton btnMicrophone, @NonNull ImageButton btnSettings,
      @NonNull MaterialCardView layoutTranscription, @NonNull ProgressBar progressBar,
      @NonNull SwitchMaterial switchFloatingButton, @NonNull TextView tvCurrentConfig,
      @NonNull TextView tvStatus, @NonNull TextView tvTranscribedText) {
    this.rootView = rootView;
    this.animationView = animationView;
    this.btnClear = btnClear;
    this.btnCopy = btnCopy;
    this.btnMicrophone = btnMicrophone;
    this.btnSettings = btnSettings;
    this.layoutTranscription = layoutTranscription;
    this.progressBar = progressBar;
    this.switchFloatingButton = switchFloatingButton;
    this.tvCurrentConfig = tvCurrentConfig;
    this.tvStatus = tvStatus;
    this.tvTranscribedText = tvTranscribedText;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.animation_view;
      ImageView animationView = ViewBindings.findChildViewById(rootView, id);
      if (animationView == null) {
        break missingId;
      }

      id = R.id.btn_clear;
      Button btnClear = ViewBindings.findChildViewById(rootView, id);
      if (btnClear == null) {
        break missingId;
      }

      id = R.id.btn_copy;
      Button btnCopy = ViewBindings.findChildViewById(rootView, id);
      if (btnCopy == null) {
        break missingId;
      }

      id = R.id.btn_microphone;
      FloatingActionButton btnMicrophone = ViewBindings.findChildViewById(rootView, id);
      if (btnMicrophone == null) {
        break missingId;
      }

      id = R.id.btn_settings;
      ImageButton btnSettings = ViewBindings.findChildViewById(rootView, id);
      if (btnSettings == null) {
        break missingId;
      }

      id = R.id.layout_transcription;
      MaterialCardView layoutTranscription = ViewBindings.findChildViewById(rootView, id);
      if (layoutTranscription == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.switch_floating_button;
      SwitchMaterial switchFloatingButton = ViewBindings.findChildViewById(rootView, id);
      if (switchFloatingButton == null) {
        break missingId;
      }

      id = R.id.tv_current_config;
      TextView tvCurrentConfig = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentConfig == null) {
        break missingId;
      }

      id = R.id.tv_status;
      TextView tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      id = R.id.tv_transcribed_text;
      TextView tvTranscribedText = ViewBindings.findChildViewById(rootView, id);
      if (tvTranscribedText == null) {
        break missingId;
      }

      return new ActivityMainBinding((ScrollView) rootView, animationView, btnClear, btnCopy,
          btnMicrophone, btnSettings, layoutTranscription, progressBar, switchFloatingButton,
          tvCurrentConfig, tvStatus, tvTranscribedText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
